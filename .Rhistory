st_transform(8528)
ggplot() +
geom_sf(data = dmv_tracts, fill = "white", color = "grey") +
geom_sf(data = dmv_metro, fill = NA, color = "red") +
theme_void()
?core_based_statistical_areas
###exe1 attempt
#
dmv_tracts <- map_dfr(c("DC", "MD", "VA", "WV"), ~{
tracts(.x, cb = TRUE, year = 2020)
}) %>%
st_transform(8528)
dmv_metro <- core_based_statistical_areas(cb = TRUE, year = 2020) %>%
filter(str_detect(NAME, "Washington-Arlington-Alexandria, DC-VA-MD-WV"))%>%
st_transform(8528)
ggplot() +
geom_sf(data = dmv_tracts, fill = "white", color = "grey") +
geom_sf(data = dmv_metro, fill = NA, color = "red") +
theme_void()
options(tigris_use_cache = TRUE)
library(sf)
library(mapview)
gainesville_patients <- tibble(
patient_id = 1:10,
longitude = c(-82.308131, -82.311972, -82.361748, -82.374377,
-82.38177, -82.259461, -82.367436, -82.404031,
-82.43289, -82.461844),
latitude = c(29.645933, 29.655195, 29.621759, 29.653576,
29.677201, 29.674923, 29.71099, 29.711587,
29.648227, 29.624037)
)
# CRS: NAD83(2011) / Florida North
gainesville_sf <- gainesville_patients %>%
st_as_sf(coords = c("longitude", "latitude"),
crs = 4326) %>%
st_transform(6440)
mapview(
gainesville_sf,
col.regions = "red",
legend = FALSE
)
alachua_insurance <- get_acs(
geography = "tract",
variables = "DP03_0096P",
state = "FL",
county = "Alachua",
year = 2019,
geometry = TRUE
) %>%
select(GEOID, pct_insured = estimate,
pct_insured_moe = moe) %>%
st_transform(6440)
alachua_insurance <- get_acs(
geography = "tract",
variables = "DP03_0096P",
state = "FL",
county = "Alachua",
year = 2019,
geometry = TRUE
) %>%
select(GEOID, pct_insured = estimate,
pct_insured_moe = moe) %>%
st_transform(6440)
library(tigris)
library(tidyverse)
library(sf)
library(mapview)
alachua_insurance <- get_acs(
geography = "tract",
variables = "DP03_0096P",
state = "FL",
county = "Alachua",
year = 2019,
geometry = TRUE
) %>%
select(GEOID, pct_insured = estimate,
pct_insured_moe = moe) %>%
st_transform(6440)
library(tigris)
library(tidyverse)
library(sf)
library(mapview)
options(tigris_use_cache = TRUE)
################Using Spatial Analysis to find census tract borders and metropolitical areas
# CRS used: NAD83(2011) Kansas Regional Coordinate System
# Zone 11 (for Kansas City)
#This makes an empty map with tracts in it
ks_mo_tracts <- map_dfr(c("KS", "MO"), ~{
tracts(.x, cb = TRUE, year = 2020)
}) %>%
st_transform(8528)
#finds your cbsa, need to be very specific with the string
kc_metro <- core_based_statistical_areas(cb = TRUE, year = 2020) %>%
filter(str_detect(NAME, "Kansas City")) %>%
st_transform(8528)
#makes the red line and plots tracts
ggplot() +
geom_sf(data = ks_mo_tracts, fill = "white", color = "grey") +
geom_sf(data = kc_metro, fill = NA, color = "red") +
theme_void()
kc_tracts <- ks_mo_tracts[kc_metro, ]
ggplot() +
geom_sf(data = kc_tracts, fill = "white", color = "grey") +
geom_sf(data = kc_metro, fill = NA, color = "red") +
theme_void()
###exe1 attempt
#
dmv_tracts <- map_dfr(c("DC", "MD", "VA", "WV"), ~{
tracts(.x, cb = TRUE, year = 2020)
}) %>%
st_transform(8528)
dmv_metro <- core_based_statistical_areas(cb = TRUE, year = 2020) %>%
filter(str_detect(NAME, "Washington-Arlington-Alexandria, DC-VA-MD-WV"))%>%
st_transform(8528)
ggplot() +
geom_sf(data = dmv_tracts, fill = "white", color = "grey") +
geom_sf(data = dmv_metro, fill = NA, color = "red") +
theme_void()
gainesville_patients <- tibble(
patient_id = 1:10,
longitude = c(-82.308131, -82.311972, -82.361748, -82.374377,
-82.38177, -82.259461, -82.367436, -82.404031,
-82.43289, -82.461844),
latitude = c(29.645933, 29.655195, 29.621759, 29.653576,
29.677201, 29.674923, 29.71099, 29.711587,
29.648227, 29.624037)
)
# CRS: NAD83(2011) / Florida North
gainesville_sf <- gainesville_patients %>%
st_as_sf(coords = c("longitude", "latitude"),
crs = 4326) %>%
st_transform(6440)
mapview(
gainesville_sf,
col.regions = "red",
legend = FALSE
)
alachua_insurance <- get_acs(
geography = "tract",
variables = "DP03_0096P",
state = "FL",
county = "Alachua",
year = 2019,
geometry = TRUE
) %>%
select(GEOID, pct_insured = estimate,
pct_insured_moe = moe) %>%
st_transform(6440)
library(tidycensus)
alachua_insurance <- get_acs(
geography = "tract",
variables = "DP03_0096P",
state = "FL",
county = "Alachua",
year = 2019,
geometry = TRUE
) %>%
select(GEOID, pct_insured = estimate,
pct_insured_moe = moe) %>%
st_transform(6440)
mapview(
alachua_insurance,
zcol = "pct_insured",
layer.name = "% with health<br/>insurance"
) +
mapview(
gainesville_sf,
col.regions = "red",
legend = FALSE
)
patients_joined <- st_join(
gainesville_sf,
alachua_insurance
)
# CRS: NAD83(2011) / Texas Centric Albers Equal Area
tx_cbsa <- get_acs(
geography = "cbsa",
variables = "B01003_001",
year = 2019,
survey = "acs1",
geometry = TRUE
) %>%
filter(str_detect(NAME, "TX")) %>%
slice_max(estimate, n = 4) %>%
st_transform(6579)
pct_hispanic <- get_acs(
geography = "tract",
variables = "DP05_0071P",
state = "TX",
year = 2019,
geometry = TRUE
) %>%
st_transform(6579)
hispanic_by_metro <- st_join(
pct_hispanic,
tx_cbsa,
join = st_within,
suffix = c("_tracts", "_metro"),
left = FALSE
)
hispanic_by_metro %>%
mutate(NAME_metro = str_replace(NAME_metro, ", TX Metro Area", "")) %>%
ggplot() +
geom_density(aes(x = estimate_tracts), color = "navy", fill = "navy",
alpha = 0.4) +
theme_minimal() +
facet_wrap(~NAME_metro) +
labs(title = "Distribution of Hispanic/Latino population by Census tract",
subtitle = "Largest metropolitan areas in Texas",
y = "Kernel density estimate",
x = "Percent Hispanic/Latino in Census tract")
ggplot(ny) +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c(labels = scales::label_dollar()) +
theme_void() +
labs(fill = "Median household\nincome")
y <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NY",
county = "New York",
year = 2020,
geometry = TRUE
)
ny <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NY",
county = "New York",
year = 2020,
geometry = TRUE
)
ggplot(ny) +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c(labels = scales::label_dollar()) +
theme_void() +
labs(fill = "Median household\nincome")
ny2 <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "NY",
county = "New York",
geometry = TRUE,
year = 2020,
cb = FALSE
) %>%
st_transform(6538)
ny_erase <- erase_water(ny2)
ggplot(ny_erase) +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c(labels = scales::label_dollar()) +
theme_void() +
labs(fill = "Median household\nincome")
ny2 <- get_acs(
geography = "county",
variables = "B19013_001",
state = "Washington",
county = "King County",
geometry = TRUE,
year = 2020,
cb = FALSE
) %>%
st_transform(6538)
wamap <- get_acs(
geography = "county",
variables = "B19013_001",
state = "Washington",
county = "King County",
geometry = TRUE,
year = 2020,
cb = FALSE
)
wamaper <- erase_water(wamap)
options(tigris_use_cache = TRUE)
library(crsuggest)
?crsuggest
?crs_suggest()
crs_suggest("WA")
suggest_crs("WA")
?suggest_crs()
wacrs <- tracts("WA", "King County", cb=T)
suggest_crs(wacrs)
wamap <- get_acs(
geography = "county",
variables = "B19013_001",
state = "Washington",
county = "King County",
geometry = TRUE,
year = 2020,
cb = FALSE
)%>%
st_transform(6318)
wamaper <- erase_water(wamap)
wamap <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "Washington",
county = "King County",
geometry = TRUE,
year = 2020,
cb = FALSE
)%>%
st_transform(6318)
wacrs <- tracts("WA", "King County", cb=T)
suggest_crs(wacrs)
wamaper <- erase_water(wamap)
ggplot(wamaper)
ggplot(wamaper) +
geom_sf(aes(fill = estimate)) +
scale_fill_viridis_c(labels = scales::label_dollar()) +
theme_void() +
labs(fill = "Median household\nincome")
library(spdep)
install.packages("sdep")
library(spdep)
install.packages("spdep")
#makes the red line and plots tracts
ggplot() +
geom_sf(data = ks_mo_tracts, fill = "white", color = "grey") +
geom_sf(data = kc_metro, fill = NA, color = "red") +
theme_void()
library(spdep)
# CRS: NAD83 / Texas North Central
dfw <- core_based_statistical_areas(cb = TRUE, year = 2020) %>%
filter(str_detect(NAME, "Dallas")) %>%
st_transform(32138)
dfw_tracts <- get_acs(
geography = "tract",
variables = "B01002_001",
state = "TX",
year = 2020,
geometry = TRUE
) %>%
st_transform(32138) %>%
st_filter(dfw, .predicate = st_within) %>%
na.omit()
ggplot(dfw_tracts) +
geom_sf(aes(fill = estimate), color = NA) +
scale_fill_viridis_c() +
theme_void()
neighbors <- poly2nb(dfw_tracts, queen = TRUE)
summary(neighbors)
dfw_coords <- dfw_tracts %>%
st_centroid() %>%
st_coordinates()
plot(dfw_tracts$geometry)
plot(neighbors,
coords = dfw_coords,
add = TRUE,
col = "blue",
points = FALSE)
weights <- nb2listw(neighbors, style = "W")
weights$weights[[1]]
dmv_tracts%>%
st_transform(32138) %>%
st_filter(dfw, .predicate = st_within) %>%
na.omit()
ggplot(dmv_tracts) +
geom_sf(aes(fill = estimate), color = NA) +
scale_fill_viridis_c() +
theme_void()
neighbors <- poly2nb(dmv_tracts, queen = TRUE)
summary(neighbors)
dmv_coords <- dmv_tracts %>%
st_centroid() %>%
st_coordinates()
plot(dmv_tracts$geometry)
plot(neighbors,
coords = dmv_coords,
add = TRUE,
col = "blue",
points = FALSE)
weights <- nb2listw(neighbors, style = "W")
weights$weights[[1]]
library(reticulate)
library(tidyverse)
library(udpipe)
library(ggwordcloud)
library(rvest)
library(xml2)
library(tidytext)
library(SnowballC)
library(quanteda)
library(text2vec)
library(LDAvis)
library(SnowballC)
text <- read.csv('israelframe.csv')
setwd("~/Old Classes/GVPT R scripts/628 scripts/Markdown-Webscraping/docs")
---
title: "trumplogitindex"
###320 final project
library(poliscidata)
library(tidyverse)
dataset <- read.csv("Final project dataset ct.csv")
###320 final project
library(poliscidata)
library(tidyverse)
dataset <- read.csv("Final project dataset ct.csv")
###320 final project
library(poliscidata)
library(tidyverse)
dataset <- read.csv("Final project dataset ct.csv")
##Lets make our dummies, first Trump Vote coded as 1 or 0
dataset$trumpvote <- as.numeric(dataset$Q19=="Donald Trump")
freqC(dataset$trumpvote)
freqC(dataset$Q19)
##now the broken institutions variables Q65, Does respondent think instituions are broken in the U.S.?
dataset$broke <- dataset$Q65
dataset <- dataset %>%
mutate(broke = case_when(
Q65 %in% c("Strongly agree", "Somewhat agree") ~ "agree",
Q65 %in% c("Neither agree nor disagree", "Strongly disagree", "Somewhat disagree") ~ "disagree",
TRUE ~ NA_character_
))
levels(dataset$broke)=c("agree", "disagree")
levels(dataset$broke)
describe(dataset$broke)
##Now code Q57, party ID
dataset <- dataset %>%
mutate(partyid = case_when(
Q57 %in% c("Democrat", "Independent, but closer to Democrat") ~ "democrat",
Q57 %in% c("Republican", "Independent", "I'm not really a political person", "Independent, but closer to Republican") ~ "notdemocrat",
TRUE ~ NA_character_
))
levels(dataset$partyid)=c("democrat", "notdemocrat")
describe(dataset$partyid)
##Recode education variable Q35, as college or no college
freqC(dataset$Q35)
dataset <- dataset %>%
mutate(college = case_when(
Q35 %in% c("Associate degree in college (2-years)", "Bachelor's degree in college (4-years)",
"Doctoral degree", "Master's degree", "Professional degree (JD, MD)") ~ "college",
Q35 %in% c("High school graduate (high school diploma or equivalent including GED)", "Less than high school degree", "Some college but no degree") ~ "nocollege",
TRUE ~ NA_character_
))
levels(dataset$college)=c("college", "nocollege")
describe(dataset$college)
#save to design dataset
datasetD <- svydesign(id=~1, data=dataset)
#logit model
trump.logit <- svyglm(trumpvote~broke+partyid+college, design=datasetD, family="quasibinomial")
summary(trump.logit)
##prediction frames, dem and non dem
levels(dataset$broke)
prediction.frame.1 = expand.grid(broke = levels(dataset$broke),
partyid = "democrat",
college = levels(dataset$college))
prediction.frame.1
prediction.frame.2 = expand.grid(broke = levels(dataset$broke),
partyid = "notdemocrat",
college = levels(dataset$college))
prediction.frame.2
#you would have two predictions & two prediction frame
?predict.glm
predictions.1 = predict.glm(trump.logit, newdata = prediction.frame.1,
type = "response", se.fit = T,
interval = "confidence", level = .95)
predictions.2 = predict.glm(trump.logit, newdata = prediction.frame.2,
type = "response", se.fit = T,
interval = "confidence", level = .95)
predictions.1$fit
predictions.2
predictions.1
#plot of predicted prob
plot(1:4, y = predictions.1$fit, ylim = c(0,1), axes = F,
xlab = "View of Institutions in the U.S. and Level of Education",
ylab = "Probability of Trump Vote",
main =
"Figure 3:View of Insitituions and Education Level Predicting \n the Probability for a Trump Vote",
pch =16,
col = c("lightblue", "lightblue", "lightblue", "lightblue"))
points(1:4, y = predictions.2$fit, pch =16,
col = c("palevioletred", "palevioletred",
"palevioletred", "palevioletred"))
segments(x0=1:4 , y0=predictions.1$fit-1.96*predictions.1$se.fit ,
x1=1:4 , y1=predictions.1$fit+1.96*predictions.1$se.fit)
segments(x0=1:4 , y0=predictions.2$fit-1.96*predictions.2$se.fit ,
x1=1:4 , y1=predictions.2$fit+1.96*predictions.2$se.fit)
axis(side=1, at=1:4, labels=c("College Educated \n Institutions Broken",
"College Educated \n Institutions Not Broken",
"Not College Educated \n Institutions  Broken",
"Not College Educated \n Institutions Not Broken"))
axis(side=2)
legend("topright", legend = c("Democrat", "Republican"),
col = c("lightblue", "palevioletred"), pch = 16, title = "Party")
#pie charts
pie_old <- data.frame(response = c("Neither agree nor disagree ", "Somewhat agree",
"Strongly agree", "Somewhat disagree", "Strongly disagree"),
proportion = c(.196, 0.349, .387, .048, .02))
pie_chart_old <- ggplot(pie_old, aes(x = "", y = proportion, fill = response)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
theme_minimal() +
labs(title = "Figure1: Orginial proprtions of view of institutions in the U.S.") +
geom_text(aes(label = paste0(round(proportion * 100, 1), "%\n(", round(proportion, 3), ")")),
position = position_stack(vjust = 0.5)) +
theme(legend.position = "bottom")  # Optional: Move legend to the bottom
pie_chart_old
#new pie chart
pie_new <- data.frame(response = c("Agree", "Disagree"),
proportion = c(0.735, 0.265))
# Create a pie chart
pie_chart_new <- ggplot(pie_new, aes(x = "", y = proportion, fill = response)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
theme_minimal() +
labs(title = "Figure 2:Transformed proprtions of view of insitutions in the U.S.") +
geom_text(aes(label = paste0(round(proportion * 100, 1), "%\n(", round(proportion, 3), ")")),
position = position_stack(vjust = 0.5)) +
theme(legend.position = "bottom")  # Optional: Move legend to the bottom
View(prediction.frame.1)
setwd("~/Old Classes/GVPT R scripts/628 scripts/Trump-Logit-Model")
